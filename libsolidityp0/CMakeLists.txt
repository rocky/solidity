# Until we have a clear separation, libyul has to be included here
set(sources
	analysis/ConstantEvaluator.cpp
	analysis/ConstantEvaluator.h
	analysis/ContractLevelChecker.cpp
	analysis/ContractLevelChecker.h
	analysis/ControlFlowAnalyzer.cpp
	analysis/ControlFlowAnalyzer.h
	analysis/ControlFlowBuilder.cpp
	analysis/ControlFlowBuilder.h
	analysis/ControlFlowGraph.cpp
	analysis/ControlFlowGraph.h
	analysis/DeclarationContainer.cpp
	analysis/DeclarationContainer.h
	analysis/DocStringAnalyser.cpp
	analysis/DocStringAnalyser.h
	analysis/GlobalContext.cpp
	analysis/GlobalContext.h
	analysis/PostTypeChecker.cpp
	analysis/PostTypeChecker.h
	analysis/StaticAnalyzer.cpp
	analysis/StaticAnalyzer.h
	analysis/SyntaxChecker.cpp
	analysis/SyntaxChecker.h
	analysis/TypeChecker.cpp
	analysis/TypeChecker.h
	ast/AST.cpp
	ast/AST.h
	ast/AST_accept.h
	ast/ASTAnnotations.cpp
	ast/ASTAnnotations.h
	ast/ASTEnums.h
	ast/ASTForward.h
	ast/ASTJsonConverter.cpp
	ast/ASTJsonConverter.h
	ast/ASTPrinter.cpp
	ast/ASTPrinter.h
	ast/ASTVisitor.h
	ast/ExperimentalFeatures.h
	ast/Types.cpp
	ast/Types.h
	ast/TypeProvider.cpp
	ast/TypeProvider.h
	interface/CompilerStack.cpp
	interface/CompilerStack.h
	interface/ReadFile.h
	interface/StandardCompiler.cpp
	interface/StandardCompiler.h
	interface/Version.cpp
	interface/Version.h
	parsing/DocStringParser.cpp
	parsing/DocStringParser.h
	parsing/Parser.cpp
	parsing/Parser.h
	parsing/Token.h
)

add_library(solidityp0 ${sources})
target_link_libraries(solidityp0 PUBLIC langutil devcore ${Boost_FILESYSTEM_LIBRARY} ${Boost_SYSTEM_LIBRARY})
